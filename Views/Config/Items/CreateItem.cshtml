@using InfoScreenPi.Entities
@model List<Background>

<form id="frm-create-item">
    <div class="form-group">
        <label for="title">Title</label>
        <input type="text" class="form-control" id="ItemTitle" placeholder="Titel" data-validation="required">
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="title">Vervaldatum en -uur</label>
                <div class='input-group date' id='expiredatetimepicker'>
                    <input type='text' name="expireDateTime" class="form-control" id="expireDateTime" data-validation="required"/>
                    <span class="input-group-addon" for="expireDateTime">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
    
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="title">Weergavetijd</label>
                <div class="input-group">
                    <input type="number" class="form-control" id="DisplayTime" value="@ViewBag.DefaultDisplayTime" data-validation="number required"/>
                    <span class="input-group-addon">seconden</span>
                </div>
                
    
            </div>
        </div>
    </div>
    
    
    
    <div class="form-group">
        <label for="content">Inhoud</label>
        <textarea name="editorNewItem" id="editorNewItem" rows="20" cols="80"></textarea>
    </div>
    <div class="form-group">
        <label for="background">Achtergrond</label>
        <div class="input-group">
            <label class="input-group-btn">
                <span class="btn btn-primary">
                    Browse &hellip; <input type="file" class="upload"  id="f_UploadImageNew" style="display: none;" multiple>
                </span>
            </label>
            <input type="text" class="form-control" placeholder="Upload nieuwe achtergrond" id="placeholderUploadNew" readonly>
        </div><br />
        <div id="backselectiongrid">
            @await Html.PartialAsync("~/Views/Config/Backgrounds/SelectionGrid.cshtml", Model)    
        </div>
    </div>
    
    <hr>
    <button class="btn btn-primary" id="registerNewItem">Registreer</button>
</form>

<script>
    $(function () {
        $('#expiredatetimepicker').datetimepicker();
    });
    $('#expiredatetimepicker input').click(function(event){
        $('#expiredatetimepicker ').data("DateTimePicker").show();
    });
</script>
<script>
    
    $.validate({
        form : '#frm-create-item',
        onError : function($form) {
            //alert('Validation of form '+$form.attr('id')+' failed!');
        },
        onSuccess : function($form) {
            //alert('The form '+$form.attr('id')+' is valid!');
            registerItem();
            return false; // Will stop the submission of the form
        }
    });
    
    CKEDITOR.replace( 'editorNewItem' , {
        language: 'nl'
    });

    //$("#registerNewItem").click(function(){
    function registerItem(){
        var title = $("#ItemTitle").val();
        var content = CKEDITOR.instances.editorNewItem.getData();
        var img = $(".selectedBg").children("img")[0];
        var bgid = $(img).attr('id');
        var expDT = $("#expireDateTime").val();
        var dspTime = $("#DisplayTime").val();

        var postData = { itemTitle: title, itemContent: content, bgId: bgid, expireDateTime: expDT, displayTime: dspTime};

        $.ajax({
            type: "POST",
            url: '/Config/Items/RegisterNewItem',
            data: postData,
            success: function(response, textStatus, jqXHR){
                if(response.success){
                    renewItemsGrid();
                    modal.close();
                    alertify.success(response.message);
                }
                else{
                    alertify.error(response.message);
                }
            },
            dataType: "json",
            traditional: true
        });

    };
    
    var _URL = window.URL || window.webkitURL;

    
    $("#f_UploadImageNew").on('change', function () {
    
        var label = $(this).val().replace(/\\/g, '/').replace(/.*\//, '');
        var input = $(this).parents('.input-group').find(':text');

        if( input.length ) {
            input.val(label);
        } else {
            if( label ) alert(log);
        }

        var file, img;
        if ((file = this.files[0])) {
            img = new Image();
            img.onload = function () {
                
                
                var formData = new FormData();
                formData.append('file', file);//$('#f_UploadImage')[0].files[0]);
                $.ajax({
                    type: 'post',
                    url: '/Config/Backgrounds/FileUpload',
                    data: formData,
                    success: function (response, textStatus, jqXHR) {
                        if(response.success){
                            
                            $.get("/Config/Backgrounds/Grid", function (data) {
                                $("#backgroundGrid").empty();
                                $("#backgroundGrid").html(data);
                                refreshGridMenu();
                            });
                            
                            $.get("/Config/Backgrounds/SelectionGrid", function (data) {
                                $("#backselectiongrid").empty();
                                $("#backselectiongrid").html(data);

                                $("#backselectiongrid").find("a").first().removeClass("selectedBg");
                                $("#backselectiongrid").find("a").last().addClass("selectedBg");
                                
                            });
                            
                            $("#placeholderUploadNew").val("");
                            alertify.success(response.message);
                        }
                        else{
                            alertify.error(response.message);
                        }
                    },
                    processData: false,
                    contentType: false,
                    error: function () {
                        alert("Whoops something went wrong!");
                    }
                });
                
                
                
            };
            img.onerror = function () {
                alert("Not a valid file:" + file.type);
            };
            img.src = _URL.createObjectURL(file);
        }
    });


</script>